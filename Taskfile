#!/bin/bash

browsers=("firefox" "chrome")

function task:build {
  : "Build extensions"

  rm -Rf build

  echo "Build v$(version)"
  for browser in "${browsers[@]}"; do
    echo "  building: $browser"

    mkdir -p build/$browser
    cp src/*.js build/$browser
    jq '. * input' src/manifest.json src/$browser.manifest.json > build/$browser/manifest.json
  done
}

function task:package {
  : "Package extensions"

  rm -Rf dist
  mkdir dist

  for browser in "${browsers[@]}"; do
    echo "  packaging: $browser"
    zip -j dist/smart-tab-groups-$browser-$(version).zip build/$browser/*
  done
}

function task:release {
  : "Release extension"

  git tag "v$(version)"
  git push origin --tags
}

function task:default {
  task:build
}

function version {
  : "Prints version of the extension"

  jq -r .version < src/manifest.json
}

####################

function task:help {
  : "Prints this help"

  echo "$0 <task> <args>"
  echo
  echo "Tasks:"
  for task in $(compgen -A function | sed -nE '/default/d; s/task:(.*)/\1/p'); do
    task:describe $task
  done
  echo
  task:explain default
}

COLON_COMMENT_PATTERN=" *: *\(['"'"'"]\)\(.*\)\1;"
function getTask {
  type "task:$1"
}

function task:describe {
  : "Prints description of task"

  printf '    %-16s | %s\n' $1 "$(getTask $1 | sed -ne "s/${COLON_COMMENT_PATTERN}/\2/p")"
}

function task:explain {
  : "Prints definition of task"

  printf '%s => %s\n' $1 "$(getTask $1 | sed -e "1,2d; /${COLON_COMMENT_PATTERN}/d;")"
}

TIMEFORMAT="Task completed in %3lR"
time "task:${@:-default}"
